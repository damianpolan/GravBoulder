package gravboulder.game.orientation;

public class Vector
{
	public float[] vArray;

	
	public static Vector Zero3()
	{
		return new Vector(0,0,0);
	}
	
	public Vector(float... params)
	{
		vArray = params.clone();
	}

	public Vector add(Vector value)
	{
		compare(value);
		float[] newA = new float[vArray.length];

		for (int i = 0; i < newA.length; i++)
		{
			newA[i] = vArray[i] + value.vArray[i];
		}

		return new Vector(newA);
	}

	public Vector subtract(Vector value)
	{
		compare(value);
		float[] newA = new float[vArray.length];

		for (int i = 0; i < newA.length; i++)
		{
			newA[i] = vArray[i] - value.vArray[i];
		}

		return new Vector(newA);
	}

	public Vector divide(Vector value)
	{
		compare(value);
		float[] newA = new float[vArray.length];

		for (int i = 0; i < newA.length; i++)
		{
			newA[i] = vArray[i] / value.vArray[i];
		}

		return new Vector(newA);
	}

	public Vector multiply(Vector value)
	{
		compare(value);
		float[] newA = new float[vArray.length];

		for (int i = 0; i < newA.length; i++)
		{
			newA[i] = vArray[i] * value.vArray[i];
		}

		return new Vector(newA);
	}
	
	private void compare(Vector value)
	{
		if (vArray.length != value.vArray.length)
			throw new RuntimeException("Compared vector's must be same length.");
	}

}
